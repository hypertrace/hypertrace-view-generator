service.name = view-generators
service.admin.port = 8099

main.class = org.hypertrace.core.viewgenerator.service.MultiViewGeneratorLauncher

view.generators = ["view-gen-backend-entity", "view-gen-raw-service", "view-gen-raw-traces", "view-gen-service-call", "view-gen-span-event"]

kafka.streams.config = {
  application.id = all-view-generators-job
  metrics.recording.level = INFO
  num.stream.threads = 2
  producer.compression.type = gzip
  topology.optimization = all

  bootstrap.servers = "localhost:9092"
  bootstrap.servers = ${?KAFKA_BOOTSTRAP_SERVERS}
  auto.offset.reset = "latest"
  auto.commit.interval.ms = 5000
}

schema.registry.config {
  schema.registry.url = "http://localhost:8081"
  schema.registry.url = ${?SCHEMA_REGISTRY_URL}
  specific.avro.reader = true
}


flink.job {
  parallelism = 1
  metrics {
    metrics.reporters = "slf4j"
    metrics.reporter.prometheus.class = "org.hypertrace.core.serviceframework.metrics.flink.PrometheusReporter"
    metrics.reporter.slf4j.class: org.apache.flink.metrics.slf4j.Slf4jReporter
    metrics.reporter.slf4j.interval: "60 SECONDS"
  }
}
